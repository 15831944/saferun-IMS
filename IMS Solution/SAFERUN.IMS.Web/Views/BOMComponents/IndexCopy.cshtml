


@model IEnumerable<SAFERUN.IMS.Web.Models.BOMComponent>




@{
    ViewBag.Title = "BOM物料组维护";
}


<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
             
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                        <i class="fa fa-wrench"></i>
                    </a>
                    <ul class="dropdown-menu dropdown-user">
                        <li>
                            <a href="table_data_tables.html#">Config option 1</a>
                        </li>
                        <li>
                            <a href="table_data_tables.html#">Config option 2</a>
                        </li>
                    </ul>
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">

                <div class="table-responsive">
           
 
                    <table id="bomcomponents_treegrid" class="easyui-treegrid" title="BOM物料组维护 treegrid" style="width:auto;height:auto"
                           data-options="
                          
                rownumbers:true,
                remoteFilter: true,
                singleSelect: true,
                toolbar: '#bomcomponents_toolbar',
                url: '/BOMComponents/GetData',
                method: 'get',
                onClickCell: onClickCell,
                idField: 'Id',
                treeField: 'ComponentSKU',
                pagination: 'true',
                           onBeforeLoad: function(row,param){
                    if (!row) {    // load top level rows
                        param.id = 0;    // set id=0, indicate to load new page rows
                    }
                }
                   ">
                        <thead>
                            <tr>
                                @*<th data-options="field:'ck',checkbox:true"></th>*@
                                <th data-options="field:'ComponentSKU',width:340 ,resizable:true">@Html.DisplayNameFor(model => model.ComponentSKU)</th>
                                <th data-options="field:'DesignName',width:140  ">@Html.DisplayNameFor(model => model.DesignName)</th>

                                <th data-options="field:'MadeType',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.MadeType)</th>


                                <th data-options="field:'SKUGroup',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.SKUGroup)</th>




                                <th data-options="field:'ALTSku',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.ALTSku)</th>


                                <th data-options="field:'GraphSKU',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.GraphSKU)</th>


                                @*<th data-options="field:'StockSKU',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.StockSKU)</th>*@

                                <th data-options="field:'ProductionProcessId',width:100,
                        formatter:function(value,row){
                            return row.ProductionProcessName;
                        },
                        editor:{
                            type:'combobox',
                            options:{
                                valueField:'Id',
                                textField:'Name',
                                method:'get',
                                url:'/BOMComponents/GetProductionProcesses',
                                required:false
                            }
                        }">@Html.DisplayNameFor(model => model.ProductionProcessId)</th>



                        <th data-options="field:'Remark1',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.Remark1)</th>


                        <th data-options="field:'Remark2',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.Remark2)</th>


                        <th data-options="field:'ConsumeQty',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}}">@Html.DisplayNameFor(model => model.ConsumeQty)</th>


                        <th data-options="field:'ConsumeTime',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}}">@Html.DisplayNameFor(model => model.ConsumeTime)</th>


                        <th data-options="field:'RejectRatio',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}}">@Html.DisplayNameFor(model => model.RejectRatio)</th>


                        <th data-options="field:'Deploy',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.Deploy)</th>


                        @*<th data-options="field:'Locator',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.Locator)</th>*@


                        <th data-options="field:'ProductionLine',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.ProductionLine)</th>





                        <th data-options="field:'Version',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}}">@Html.DisplayNameFor(model => model.Version)</th>


                        <th data-options="field:'Status',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}}">@Html.DisplayNameFor(model => model.Status)</th>


                        <th data-options="field:'NoPur',width:120,editor: {type:'combobox'
                                                ,options:{
                                                panelHeight: 'auto',
                                                data: [ { value: 'true', text: 'true' },{ value: 'false', text: 'false' } ],
                                                required:true}}">@Html.DisplayNameFor(model => model.NoPur)</th>


                                                <th data-options="field:'FinishedSKU',width:140 ">@Html.DisplayNameFor(model => model.FinishedSKU)</th>





                                            </tr>
                                        </thead>


                                    </table>
	<div id="bomcomponents_toolbar" style="height:auto">
                @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-plus',plain:true" onclick="append()">新增</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="removeit()">删除</a>*@
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="accept()">保存</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="reject()">取消</a>
                @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-search',plain:true" onclick="getChanges()">GetChanges</a>*@
				<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-paperclip',plain:true" onclick="importexcel()">EXCEL 导入</a>
            </div>
				</div>

            </div>
        </div>
    </div>
</div>
<div id="importwindow" class="easyui-window" title="Excel 导入"   data-options="modal:true,collapsible:false,minimizable:false,maximizable:false,closed:true,iconCls:'icon-paperclip'" style="width:500px;height:260px;padding:10px;">
     
    <p><input type="file" name="file_upload" id="file_upload" /></p>
    <div id="alert1" class="alert alert-success">
        <button class="close" data-dismiss="alert" type="button">&times;</button>上传成功，开始执行导入。
        
    </div>
    <div id="alert2" class="alert alert-info">
        <button class="close" data-dismiss="alert" type="button">&times;</button>正在执行导入程序，请耐心等待。
         
    </div>
</div>

@section Scripts {
    <script type="text/javascript">

			 $(function () {
                        $('#alert1').hide('normal');
                        $('#alert2').hide('normal');
                        $("#file_upload").uploadify({
                            'height': 30,
                            'fileTypeDesc': 'Excel 2010 Files',
                            'fileTypeExts': '*.xlsx',
                            'swf': '/scripts/uploadify/uploadify.swf',
                            'uploader': '/FileUpload/Upload',
                            'buttonText': '选择EXCEL',
							'uploadLimit' : 1,
                            'displayData': 'speed',
							'formData': { 'modelType': 'BOMComponent' },
                            'width': 120,
                            'successTimeout': 100000,
                            'onUploadComplete': function (file) {
                                $('#alert1').hide('normal');
                                $('#alert2').show('normal');
                            },
                            'onFallback' : function() {
                                $.messager.progress('close');
                                $.messager.alert('导入错误', '导入错误，请重试！<br>', 'error');
                                $('#file_upload').uploadify('cancel')
                            },
                            'onUploadStart': function () {
                                $.messager.progress({ title: '正在处理请耐心等待！' });
                                $('#alert1').show('normal');
                                $('#alert2').hide('normal');
                            },
                            'onUploadError': function (file, errorCode, errorMsg, errorString) {
                                $.messager.progress('close');
                                $.messager.alert('导入错误', '导入错误，请修改后再倒入！<br>' + errorMsg, 'error');
                                $('#file_upload').uploadify('cancel')
                            },
                            'onUploadSuccess': function (file, data, response) {
                                $.messager.progress('close');
                                //console.log(file, data, response);
                                $('#alert1').hide('normal');
                                $('#alert2').hide('normal');
                                $('#w').window('close');
                                var data = $.parseJSON(data);
                                console.log(data);
                                if (data.success == "false") {
                                    $.messager.alert('导入错误', '导入错误，请修改后再倒入！<br>' + data.message, 'error');
                                } else {
                                    $.messager.alert('导入完成', '导入完成！<br>', 'info');
									$dg.treegrid('reload');
                                }
                                //alert('The file ' + file.name + ' was successfully uploaded with a response of ' + response + ':' + data);
                                
                            }
                        });

                    })

                    function importexcel() {
                        $('#importwindow').window('open');
                    }

                    var $dg = $('#bomcomponents_treegrid');
        
                    var editIndex = undefined;
                    var editingId = undefined;
        function endEditing() {
            if (editingId == undefined) { return true }

            $dg.treegrid('endEdit', editingId);
            editIndex = undefined;
            return true;

            //    return true;
            //if ($dg.treegrid('validateRow', editIndex)) {

			//	//                var ed = $dg.treegrid('getEditor', { index: editIndex, field: 'ParentComponentId' });
            //    //var parentcomponentcomponentsku = $(ed.target).combobox('getText');
            //    //var parentcomponentid = $(ed.target).combobox('getValue');
               
            //    //$dg.treegrid('getRows')[editIndex]['ParentComponentComponentSKU'] =  parentcomponentcomponentsku;
            //    //$dg.treegrid('getRows')[editIndex]['ParentComponentId'] = parentcomponentid;
 

			//	//                var ed = $dg.treegrid('getEditor', { index: editIndex, field: 'ProductionProcessId' });
            //    //var productionprocessname = $(ed.target).combobox('getText');
            //    //var productionprocessid = $(ed.target).combobox('getValue');
               
            //    //$dg.treegrid('getRows')[editIndex]['ProductionProcessName'] =  productionprocessname;
            //    //$dg.treegrid('getRows')[editIndex]['ProductionProcessId'] = productionprocessid;
 

			//	//                var ed = $dg.treegrid('getEditor', { index: editIndex, field: 'SKUId' });
            //    //var skusku = $(ed.target).combobox('getText');
            //    //var skuid = $(ed.target).combobox('getValue');
               
            //    //$dg.treegrid('getRows')[editIndex]['SKUSku'] =  skusku;
            //    //$dg.treegrid('getRows')[editIndex]['SKUId'] = skuid;
 

			//	//				$dg.treegrid('endEdit', editIndex);
            //    //editIndex = undefined;

                
            //    return true;
            //} else {
            //    return false;
            //}
        }
        function onClickCell(field, row) {
            if (editingId != row.Id) {
                if (endEditing()) {
             
                    if (row) {
                        editingId = row.Id
                        $dg.treegrid('beginEdit', editingId);
                        //console.log(editingId);
                    }

                    //var ed = $dg.treegrid('getEditor', { index: index, field: field });
                    //if (ed) {
                    //    ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                    //}
                    editingId = row.Id;
                } else {
                    $dg.treegrid('select', row.Id);
                }
            }
        }
        function append() {
            if (endEditing()) {
                $dg.treegrid('appendRow', { status: 'P' });
                editIndex = $dg.treegrid('getRows').length - 1;
                $dg.treegrid('selectRow', editIndex)
                        .treegrid('beginEdit', editIndex);
            }
        }
        function removeit() {
            if (editIndex == undefined) { return }
            $dg.treegrid('cancelEdit', editIndex)
                    .treegrid('deleteRow', editIndex);
            editIndex = undefined;
        }
        function accept() {
            if (endEditing()) {
                if ($dg.treegrid('getChanges').length) {
                    var inserted = $dg.treegrid('getChanges', "inserted");
                    var deleted = $dg.treegrid('getChanges', "deleted");
                    var updated = $dg.treegrid('getChanges', "updated");
                    var effectRow = new Object();
                    if (inserted.length) {
                        effectRow.inserted = inserted;
                    }
                    if (deleted.length) {
                        effectRow.deleted = deleted;
                    }
                    if (updated.length) {
                        effectRow.updated = updated;
                    }
                    //console.log(JSON.stringify(effectRow));
                    $.post("/BOMComponents/SaveData", effectRow, function (response) {
                        console.log(response);
                        if (response.Success) {
                            $.messager.alert("提示", "提交成功！");
                            $dg.treegrid('acceptChanges');
							$dg.treegrid('reload');
                        }
                    }, "JSON").error(function () {
                        $.messager.alert("错误", "提交错误了！",'error');
                      
                    });
              
                }

                $dg.treegrid('acceptChanges');
            }
        }
        function reject() {
            $dg.treegrid('rejectChanges');
            editIndex = undefined;
        }
        function getChanges() {
            var rows = $dg.treegrid('getChanges');
            alert(rows.length + ' rows are changed!');
        }
         
        
		 $(function () {
		  
		     $dg.treegrid('enableFilter', [{ remoteFilter: false },
		   		   
		   		   {
				 field: 'ProductionProcessId',
				 type:'combobox',
                 options:{
                                valueField:'Id',
                                textField:'Name',
                                method:'get',
                                url:'/BOMComponents/GetProductionProcesses',
								onChange: function (value) {
								if (value == '') {
									$dg.treegrid('removeFilterRule', 'ProductionProcessId');
								} else {
									$dg.treegrid('addFilterRule', {
										field: 'ProductionProcessId',
									    op: 'equal',
										value: value
                                });
                            }
                            $dg.treegrid('doFilter');
                        }
					}
		   },
		   		   {
				 field: 'SKUId',
				 type:'combobox',
                 options:{
                                valueField:'Id',
                                textField:'Sku',
                                method:'get',
                                url:'/BOMComponents/GetSKUs',
								onChange: function (value) {
								if (value == '') {
									$dg.treegrid('removeFilterRule', 'SKUId');
								} else {
									$dg.treegrid('addFilterRule', {
										field: 'SKUId',
									    op: 'equal',
										value: value
                                });
                            }
                            $dg.treegrid('doFilter');
                        }
					}
		   },
		   		   {
				 field: 'ParentComponentId',
				 type:'combobox',
                 options:{
                                valueField:'Id',
                                textField:'ComponentSKU',
                                method:'get',
                                url:'/BOMComponents/GetBOMComponents',
								onChange: function (value) {
								if (value == '') {
									$dg.treegrid('removeFilterRule', 'ParentComponentId');
								} else {
									$dg.treegrid('addFilterRule', {
										field: 'ParentComponentId',
									    op: 'equal',
										value: value
                                });
                            }
                            $dg.treegrid('doFilter');
                        }
					}
		   },
		   		   
		   ]);
        }) 
     </script>
}

