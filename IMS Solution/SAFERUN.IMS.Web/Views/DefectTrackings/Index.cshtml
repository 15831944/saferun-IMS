@model IEnumerable<SAFERUN.IMS.Web.Models.DefectTracking>




@{
    ViewBag.Title = "缺陷&不良跟踪";
}


<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                        <i class="fa fa-wrench"></i>
                    </a>
                    <ul class="dropdown-menu dropdown-user">
                        <li>
                            <a href="table_data_tables.html#">Config option 1</a>
                        </li>
                        <li>
                            <a href="table_data_tables.html#">Config option 2</a>
                        </li>
                    </ul>
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">

                <div class="table-responsive">


                    <table id="defecttrackings_datagrid" class="easyui-datagrid" title="缺陷&不良跟踪 DataGrid" style="width:auto;height:auto"
                           data-options="
                 rownumbers:true,

                remoteFilter: true,
                singleSelect: true,
                toolbar: '#defecttrackings_toolbar',
                url: '/DefectTrackings/GetData',
                method: 'get',
                onClickCell: onClickCell,
                pagination: 'true'
                   ">
                        <thead>
                            <tr>
                                @*<th data-options="field:'ck',checkbox:true"></th>*@
                                <th data-options="field:'Id',width:80">@Html.DisplayNameFor(model => model.Id)</th>

                                <th data-options="field:'OrderId',width:100,
                                            formatter:function(value,row){
                                                    return row.OrderOrderKey;
                                            },
                                            editor:{
                                            type:'combogrid',
                                            options:{
                                                idField:'Id',
                                                panelWidth: 300,
                                                textField:'OrderKey',
                                                method:'get',
                                                url:'/DefectTrackings/GetOrders',
                                                required:true,
                                                fitColumns:true,
                                                columns:[[
                                                    {field:'OrderKey',title:'订单号',width:100},
						                            {field:'ProjectName',title:'项目名称',width:120},
						                            {field:'Status',title:'状态',width:60}
					                                    ]],
                                                onSelect:function(rowIndex, rowData) {

	                                                    var gridOpts = $dg.datagrid('options');
	                                                    var ed = $dg.datagrid('getEditor',{index:editIndex,field:'OrderId'});
                                                        $(ed.target).combogrid('setValue',rowData.OrderKey);
                                                        $dg.datagrid('getRows')[editIndex]['OrderOrderKey'] = rowData.OrderKey;
                                                        $dg.datagrid('getRows')[editIndex]['OrderKey'] = rowData.OrderKey;
                                                        $dg.datagrid('getRows')[editIndex]['OrderId'] = rowData.Id;
                                                        $dg.datagrid('getRows')[editIndex]['ProjectName'] = rowData.ProjectName;
                                                        var ed = $dg.datagrid('getEditor',{index:editIndex,field:'ProjectName'});
                                                        $(ed.target).textbox('setValue',rowData.ProjectName);

                                                        var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'SKUId' });

                                                        $(ed.target).combogrid('grid').datagrid('reload','/DefectTrackings/GetSKUs?orderid=' + rowData.Id );

                                                }

                                            }
                                    }">@Html.DisplayNameFor(model => model.OrderId)</th>

                                <th data-options="field:'ProjectName',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.ProjectName)</th>

                                <th data-options="field:'SKUId',width:100,
                        formatter:function(value,row){
                            return row.SKUSku;
                        },
                        editor:{
                             type:'combogrid',
                                            options:{
                                                idField:'Id',
                                                panelWidth: 400,
                                                textField:'Sku',

                                                url:'/DefectTrackings/GetSKUs',
                                                required:true,
                                                mode:'remote',
                                                fitColumns:true,
                                                pagination:true,
                                                columns:[[
						                            {field:'Sku',title:'Sku',width:100},
						                            {field:'GraphSKU',title:'图纸',width:120},
						                            {field:'DesignName',title:'名称',width:120},
                                                    {field:'Locator',title:'处理工艺',width:120},
					                                    ]],
                                                onSelect:function(rowIndex, rowData) {
                                                     var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'GraphSKU' });
                                                     $(ed.target).textbox('setValue',rowData.GraphSKU);
                                                     var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'Locator' });
                                                     $(ed.target).textbox('setValue',rowData.Locator);
                                                }
                            }
                        }">@Html.DisplayNameFor(model => model.SKUId)</th>



                       


                        <th data-options="field:'Supplier',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.Supplier)</th>


                        <th data-options="field:'GraphSKU',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.GraphSKU)</th>


                        <th data-options="field:'QCQty',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}}">@Html.DisplayNameFor(model => model.QCQty)</th>


                        <th data-options="field:'CheckedQty',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}}">@Html.DisplayNameFor(model => model.CheckedQty)</th>


                        <th data-options="field:'NGQty',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}}">@Html.DisplayNameFor(model => model.NGQty)</th>

                        <th data-options="field:'DefectTypeId',width:100,
                        formatter:function(value,row){
                            return row.DefectTypeName;
                        },
                        editor:{
                            type:'combobox',
                            options:{
                                valueField:'Id',
                                textField:'Name',
                                method:'get',
                                url:'/DefectTrackings/GetDefectTypes',
                                required:false
                            }
                        }">@Html.DisplayNameFor(model => model.DefectTypeId)</th>


                        <th data-options="field:'DefectCodeId',width:100,
                        formatter:function(value,row){
                            return row.DefectCodeName;
                        },
                        editor:{
                            type:'combobox',
                            options:{
                                valueField:'Id',
                                textField:'Name',
                                method:'get',
                                url:'/DefectTrackings/GetDefectCodes',
                                required:false
                            }
                        }">@Html.DisplayNameFor(model => model.DefectCodeId)</th>



                        <th data-options="field:'Locator',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.Locator)</th>


                        <th data-options="field:'DefectDesc',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.DefectDesc)</th>


                        <th data-options="field:'Status',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}}">@Html.DisplayNameFor(model => model.Status)</th>


                        <th data-options="field:'Result',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.Result)</th>


                        <th data-options="field:'Remark',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.Remark)</th>


                        <th data-options="field:'QCUser',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.QCUser)</th>


                        <th data-options="field:'TrackingDateTime',width:160,align:'right',editor:{type:'datetimebox',options:{required:false}} ,formatter:dateformatter">@Html.DisplayNameFor(model => model.TrackingDateTime)</th>


                        <th data-options="field:'CheckedDateTime',width:160,align:'right',editor:{type:'datetimebox',options:{required:false}} ,formatter:dateformatter">@Html.DisplayNameFor(model => model.CheckedDateTime)</th>


                        <th data-options="field:'CloseDateTime',width:160,align:'right',editor:{type:'datetimebox',options:{required:false}} ,formatter:dateformatter">@Html.DisplayNameFor(model => model.CloseDateTime)</th>


                    </tr>
                </thead>


            </table>
            <div id="defecttrackings_toolbar" style="height:auto">
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-plus',plain:true" onclick="append()">Append</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="removeit()">Remove</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="accept()">Accept</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="reject()">Reject</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-search',plain:true" onclick="getChanges()">GetChanges</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-paperclip',plain:true" onclick="importexcel()">EXCEL 导入</a>
            </div>
        </div>

    </div>
</div>
</div>
</div>
<div id="importwindow" class="easyui-window" title="Excel 导入" data-options="modal:true,collapsible:false,minimizable:false,maximizable:false,closed:true,iconCls:'icon-paperclip'" style="width:500px;height:260px;padding:10px;">

    <p><input type="file" name="file_upload" id="file_upload" /></p>
    <div id="alert1" class="alert alert-success">
        <button class="close" data-dismiss="alert" type="button">&times;</button>上传成功，开始执行导入。

    </div>
    <div id="alert2" class="alert alert-info">
        <button class="close" data-dismiss="alert" type="button">&times;</button>正在执行导入程序，请耐心等待。

    </div>
</div>

@section Scripts {
    <script type="text/javascript">
     
  
        $(function () {
            

            $('#alert1').hide('normal');
            $('#alert2').hide('normal');
            $("#file_upload").uploadify({
                'height': 30,
                'fileTypeDesc': 'Excel 2010 Files',
                'fileTypeExts': '*.xlsx',
                'swf': '/scripts/uploadify/uploadify.swf',
                'uploader': '/FileUpload/Upload',
                'buttonText': '选择EXCEL',
                'uploadLimit': 1,
                'displayData': 'speed',
                width: 120,
                successTimeout: 100000,
                'onUploadComplete': function (file) {
                    $('#alert1').hide('normal');
                    $('#alert2').show('normal');
                },
                'onFallback': function () {
                    $.messager.progress('close');
                    $.messager.alert('导入错误', '导入错误，请重试！<br>', 'error');
                    $('#file_upload').uploadify('cancel')
                },
                'onUploadStart': function () {
                    $.messager.progress({ title: '正在处理请耐心等待！' });
                    $('#alert1').show('normal');
                    $('#alert2').hide('normal');
                },
                'onUploadError': function (file, errorCode, errorMsg, errorString) {
                    $.messager.progress('close');
                    $.messager.alert('导入错误', '导入错误，请修改后再倒入！<br>' + errorMsg, 'error');
                    $('#file_upload').uploadify('cancel')
                },
                'onUploadSuccess': function (file, data, response) {
                    $.messager.progress('close');
                    //console.log(file, data, response);
                    $('#alert1').hide('normal');
                    $('#alert2').hide('normal');
                    $('#w').window('close');
                    var data = $.parseJSON(data);
                    console.log(data);
                    if (data.success == "false") {
                        $.messager.alert('导入错误', '导入错误，请修改后再倒入！<br>' + data.message, 'error');
                    } else {
                        $.messager.alert('导入完成', '导入完成！<br>', 'info');
                        $dg.datagrid('reload');
                    }
                    //alert('The file ' + file.name + ' was successfully uploaded with a response of ' + response + ':' + data);

                }
            });

        })

        function importexcel() {
            $('#importwindow').window('open');
        }

        var $dg = $('#defecttrackings_datagrid');
        var editIndex = undefined;
        function endEditing() {
            if (editIndex == undefined) { return true }
            if ($dg.datagrid('validateRow', editIndex)) {

                var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'DefectCodeId' });
                var defectcodename = $(ed.target).combobox('getText');
                var DefectCodeId = $(ed.target).combobox('getValue');

                $dg.datagrid('getRows')[editIndex]['DefectCodeName'] = defectcodename;
                $dg.datagrid('getRows')[editIndex]['DefectCodeId'] = DefectCodeId;


                var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'DefectTypeId' });
                var defecttypename = $(ed.target).combobox('getText');
                var defecttypeid = $(ed.target).combobox('getValue');

                $dg.datagrid('getRows')[editIndex]['DefectTypeName'] = defecttypename;
                $dg.datagrid('getRows')[editIndex]['DefectTypeId'] = defecttypeid;


                //var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'OrderId' });
                
                //var orderorderkey = $(ed.target).combobox('getText');
                //var orderid = $(ed.target).combobox('getValue');

                //$dg.datagrid('getRows')[editIndex]['OrderOrderKey'] = orderorderkey;
                //$dg.datagrid('getRows')[editIndex]['OrderKey'] = orderorderkey;
                //$dg.datagrid('getRows')[editIndex]['OrderId'] = orderid;


                var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'SKUId' });
              
                var skusku = $(ed.target).combobox('getText');
                var skuid = $(ed.target).combobox('getValue');

                $dg.datagrid('getRows')[editIndex]['SKUSku'] = skusku;
                $dg.datagrid('getRows')[editIndex]['SKUId'] = skuid;
                $dg.datagrid('getRows')[editIndex]['ComponentSKU'] = skusku;

                $dg.datagrid('endEdit', editIndex);
                editIndex = undefined;


                return true;
            } else {
                return false;
            }
        }
        function onClickCell(index, field) {
            if (editIndex != index) {
                if (endEditing()) {
                    $dg.datagrid('selectRow', index)
                            .datagrid('beginEdit', index);
                    var ed = $dg.datagrid('getEditor', { index: index, field: field });
                    if (ed) {
                        ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                    }
                    editIndex = index;
                } else {
                    $dg.datagrid('selectRow', editIndex);
                }
            }
        }
        function append() {
            if (endEditing()) {
                $dg.datagrid('appendRow', { status: 'P' });
                editIndex = $dg.datagrid('getRows').length - 1;
                $dg.datagrid('selectRow', editIndex)
                        .datagrid('beginEdit', editIndex);
            }
        }
        function removeit() {
            if (editIndex == undefined) { return }
            $dg.datagrid('cancelEdit', editIndex)
                    .datagrid('deleteRow', editIndex);
            editIndex = undefined;
        }
        function accept() {
            if (endEditing()) {
                if ($dg.datagrid('getChanges').length) {
                    var inserted = $dg.datagrid('getChanges', "inserted");
                    var deleted = $dg.datagrid('getChanges', "deleted");
                    var updated = $dg.datagrid('getChanges', "updated");
                    var effectRow = new Object();
                    if (inserted.length) {
                        effectRow.inserted = inserted;
                    }
                    if (deleted.length) {
                        effectRow.deleted = deleted;
                    }
                    if (updated.length) {
                        effectRow.updated = updated;
                    }
                    //console.log(JSON.stringify(effectRow));
                    $.post("/DefectTrackings/SaveData", effectRow, function (rsp) {
                        console.log(rsp);
                        if (rsp.Success) {
                            $.messager.alert("提示", "提交成功！");
                            $dg.datagrid('acceptChanges');
                            $dg.datagrid('reload');
                        }
                    }, "JSON").error(function () {
                        $.messager.alert("错误", "提交错误了！", 'error');

                    });

                }

                $dg.datagrid('acceptChanges');
            }
        }
        function reject() {
            $dg.datagrid('rejectChanges');
            editIndex = undefined;
        }
        function getChanges() {
            var rows = $dg.datagrid('getChanges');
            alert(rows.length + ' rows are changed!');
        }


        $(function () {

            $dg.datagrid('enableFilter', [
                         {
                             field: 'TrackingDateTime',
                             type: 'datebox',
                             options: {
                                 onChange: function (value) {
                                     if (value == '') {
                                         $dg.datagrid('removeFilterRule', 'TrackingDateTime');
                                     } else {
                                         $dg.datagrid('addFilterRule', {
                                             field: 'TrackingDateTime',
                                             op: 'equal',
                                             value: value
                                         });
                                     }
                                     $dg.datagrid('doFilter');
                                 }
                             }
                         },
                         {
                             field: 'CheckedDateTime',
                             type: 'datebox',
                             options: {
                                 onChange: function (value) {
                                     if (value == '') {
                                         $dg.datagrid('removeFilterRule', 'CheckedDateTime');
                                     } else {
                                         $dg.datagrid('addFilterRule', {
                                             field: 'CheckedDateTime',
                                             op: 'equal',
                                             value: value
                                         });
                                     }
                                     $dg.datagrid('doFilter');
                                 }
                             }
                         },
                         {
                             field: 'CloseDateTime',
                             type: 'datebox',
                             options: {
                                 onChange: function (value) {
                                     if (value == '') {
                                         $dg.datagrid('removeFilterRule', 'CloseDateTime');
                                     } else {
                                         $dg.datagrid('addFilterRule', {
                                             field: 'CloseDateTime',
                                             op: 'equal',
                                             value: value
                                         });
                                     }
                                     $dg.datagrid('doFilter');
                                 }
                             }
                         },

                    {
                        field: 'OrderId',
                        type: 'combobox',
                        options: {
                            valueField: 'Id',
                            textField: 'OrderKey',
                            method: 'get',
                            url: '/DefectTrackings/GetOrders',
                            onChange: function (value) {
                                if (value == '') {
                                    $dg.datagrid('removeFilterRule', 'OrderId');
                                } else {
                                    $dg.datagrid('addFilterRule', {
                                        field: 'OrderId',
                                        op: 'equal',
                                        value: value
                                    });
                                }
                                $dg.datagrid('doFilter');
                            }
                        }
                    },
                    {
                        field: 'SKUId',
                        type: 'combobox',
                        options: {
                            valueField: 'Id',
                            textField: 'Sku',
                            method: 'get',
                            url: '/DefectTrackings/GetSKUs',
                            onChange: function (value) {
                                if (value == '') {
                                    $dg.datagrid('removeFilterRule', 'SKUId');
                                } else {
                                    $dg.datagrid('addFilterRule', {
                                        field: 'SKUId',
                                        op: 'equal',
                                        value: value
                                    });
                                }
                                $dg.datagrid('doFilter');
                            }
                        }
                    },
                    {
                        field: 'DefectTypeId',
                        type: 'combobox',
                        options: {
                            valueField: 'Id',
                            textField: 'Name',
                            method: 'get',
                            url: '/DefectTrackings/GetDefectTypes',
                            onChange: function (value) {
                                if (value == '') {
                                    $dg.datagrid('removeFilterRule', 'DefectTypeId');
                                } else {
                                    $dg.datagrid('addFilterRule', {
                                        field: 'DefectTypeId',
                                        op: 'equal',
                                        value: value
                                    });
                                }
                                $dg.datagrid('doFilter');
                            }
                        }
                    },
                    {
                        field: 'DefectCodeId',
                        type: 'combobox',
                        options: {
                            valueField: 'Id',
                            textField: 'Name',
                            method: 'get',
                            url: '/DefectTrackings/GetDefectCodes',
                            onChange: function (value) {
                                if (value == '') {
                                    $dg.datagrid('removeFilterRule', 'DefectCodeId');
                                } else {
                                    $dg.datagrid('addFilterRule', {
                                        field: 'DefectCodeId',
                                        op: 'equal',
                                        value: value
                                    });
                                }
                                $dg.datagrid('doFilter');
                            }
                        }
                    },

            ]);
        })
    </script>
}

