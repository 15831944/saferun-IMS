 


@model SAFERUN.IMS.Web.Models.WorkProcessDetail


 

<div class="form-horizontal">

    <div class="row">
	@Html.Hidden("Id",-1)
	<div class="col-lg-6 col-md-6 col-sm-6">
   	
			<div class="form-group">
            @Html.LabelFor(model => model.WorkProcessId,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                @Html.DropDownListFor(model => model.WorkProcessId, ViewBag.WorkProcessId as List<SelectListItem>,"---Select---", htmlAttributes: new { @class = "form-control" }) 
                @Html.ValidationMessageFor(model => model.WorkProcessId,"" , new { @class = "text-danger" })
            </div>
        </div>
				
	        <div class="form-group">
            @Html.LabelFor(model => model.StepName,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                                @Html.EditorFor(model => model.StepName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StepName,"" , new { @class = "text-danger" })
            </div>
        </div>
				
	        <div class="form-group">
            @Html.LabelFor(model => model.StandardElapsedTime,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                                @Html.EditorFor(model => model.StandardElapsedTime, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StandardElapsedTime,"" , new { @class = "text-danger" })
            </div>
        </div>
				
	        <div class="form-group">
            @Html.LabelFor(model => model.CompletedDateTime,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                                @Html.EditorFor(model => model.CompletedDateTime, "Date" ,new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompletedDateTime,"" , new { @class = "text-danger" })
            </div>
        </div>
				
	        <div class="form-group">
            @Html.LabelFor(model => model.WorkingTime,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                                @Html.EditorFor(model => model.WorkingTime, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.WorkingTime,"" , new { @class = "text-danger" })
            </div>
        </div>
				
	        <div class="form-group">
            @Html.LabelFor(model => model.QCConfirm,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                                @Html.EditorFor(model => model.QCConfirm, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.QCConfirm,"" , new { @class = "text-danger" })
            </div>
        </div>
				
	        <div class="form-group">
            @Html.LabelFor(model => model.CompletedConfirm,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                                @Html.EditorFor(model => model.CompletedConfirm, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CompletedConfirm,"" , new { @class = "text-danger" })
            </div>
        </div>
				
	        <div class="form-group">
            @Html.LabelFor(model => model.Remark,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Remark,"" , new { @class = "text-danger" })
            </div>
        </div>
			
         </div>
		@Html.Hidden("Id",-1)
	<div class="col-lg-6 col-md-6 col-sm-6">
   		
			<div class="form-group">
            @Html.LabelFor(model => model.ProcessStepId,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                @Html.DropDownListFor(model => model.ProcessStepId, ViewBag.ProcessStepId as List<SelectListItem>,"---Select---", htmlAttributes: new { @class = "form-control" }) 
                @Html.ValidationMessageFor(model => model.ProcessStepId,"" , new { @class = "text-danger" })
            </div>
        </div>
				
			<div class="form-group">
            @Html.LabelFor(model => model.StationId,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                @Html.DropDownListFor(model => model.StationId, ViewBag.StationId as List<SelectListItem>,"---Select---", htmlAttributes: new { @class = "form-control" }) 
                @Html.ValidationMessageFor(model => model.StationId,"" , new { @class = "text-danger" })
            </div>
        </div>
				
	        <div class="form-group">
            @Html.LabelFor(model => model.StartingDateTime,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                                @Html.EditorFor(model => model.StartingDateTime, "Date" ,new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StartingDateTime,"" , new { @class = "text-danger" })
            </div>
        </div>
				
	        <div class="form-group">
            @Html.LabelFor(model => model.ElapsedTime,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                                @Html.EditorFor(model => model.ElapsedTime, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ElapsedTime,"" , new { @class = "text-danger" })
            </div>
        </div>
				
	        <div class="form-group">
            @Html.LabelFor(model => model.Operator,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                                @Html.EditorFor(model => model.Operator, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Operator,"" , new { @class = "text-danger" })
            </div>
        </div>
				
	        <div class="form-group">
            @Html.LabelFor(model => model.QCConfirmDateTime,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                                @Html.EditorFor(model => model.QCConfirmDateTime, "Date" ,new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.QCConfirmDateTime,"" , new { @class = "text-danger" })
            </div>
        </div>
				
	        <div class="form-group">
            @Html.LabelFor(model => model.Status,   htmlAttributes: new { @class = "control-label  col-md-4 col-sm-4" })
            <div class=" col-md-8 col-sm-8">
                                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Status,"" , new { @class = "text-danger" })
            </div>
        </div>
				
         </div>
	    
	
	</div>


		<!-- output all Scaffold = false Hiden field -->
					@Html.HiddenFor(model => model.CreatedUserId)
					@Html.HiddenFor(model => model.CreatedDateTime)
					@Html.HiddenFor(model => model.LastEditUserId)
					@Html.HiddenFor(model => model.LastEditDateTime)
				<!-- end output all Scaffold = false Hiden field -->
</div>


