


@model IEnumerable<SAFERUN.IMS.Web.Models.ProjectType>




@{
    ViewBag.Title = "项目类型";
}


<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                        <i class="fa fa-wrench"></i>
                    </a>
                    <ul class="dropdown-menu dropdown-user">
                        <li>
                            <a href="table_data_tables.html#">Config option 1</a>
                        </li>
                        <li>
                            <a href="table_data_tables.html#">Config option 2</a>
                        </li>
                    </ul>
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">

                <div class="table-responsive">
           
 
                    <table id="projecttypes_datagrid" class="easyui-datagrid" title="项目类型 DataGrid" style="width:auto;height:auto"
                           data-options="
                                rownumbers:true,
                                idField:'Id',
                            sortName:'Id',
                            sortorder:'asc',
                           remotefilter: true,
                           singleselect: true,
                           toolbar :'#projecttypes_toolbar' ,
                           url: '/ProjectTypes/GetData' ,
                           method: 'get' ,
                           onClickCell: onClickCell,
                           pagination :true
                           ">
                        <thead>
                            <tr>
                                @*<th data-options="field:'ck',checkbox:true"></th>*@
                                <th data-options="field:'Id',width:80">@Html.DisplayNameFor(model => model.Id)</th>

                                <th data-options="field:'TypeName',width:140,editor:{type:'textbox',options:{required:true} },sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.TypeName)</th>


                                <th data-options="field:'Model',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true">@Html.DisplayNameFor(model => model.Model)</th>


                                <th data-options="field:'Version',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.Version)</th>


                                <th data-options="field:'Status',width:100,align:'right',
                                                 editor:{ type:'combobox',
                                                 options:{
                                                    panelHeight: 'auto',
                                                    data: [ { value: '0', text: '启用' },{ value: '1', text: '禁用' } ],
                                                    required:true } }  ,formatter:statusformatter">@Html.DisplayNameFor(model => model.Status)</th>


                                                <th data-options="field:'Description',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.Description)</th>


                                <th data-options="field:'StartDate',width:160,
                                                                    align:'right',editor:{
                                                                                          type:'datebox',
                                                                                          options:{
                                                                                           required:true,
                                                                                          onSelect: function(sdate){
		                                                                                        //console.log(sdate);
                                                                                               var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'ExpiryDate' });
                                                                                               var edate= $(ed.target).datebox('getValue');
                                                                                                $(ed.target).datebox('setValue','').
                                                                                                    datebox('calendar').calendar({
                                                                                                    validator: function(date){

                                                                                                            return   date>sdate;
                                                                                                      }
                                                                                                });;

                                                                                              }
                                                                                          },

                                                } ,formatter:dateformatter">@Html.DisplayNameFor(model => model.StartDate)</th>


                                <th data-options="field:'ExpiryDate',width:160,align:'right',editor:{
                                                                                                type:'datebox',
                                                                                                options:{required:true}} ,formatter:dateformatter">@Html.DisplayNameFor(model => model.ExpiryDate)</th>


                                            </tr>
                                        </thead>


                                    </table>
	<div id="projecttypes_toolbar" style="height:auto">
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-plus',plain:true" onclick="append()">新增</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="removeit()">删除</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="accept()">保存</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="reject()">取消</a>
                @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-search',plain:true" onclick="getChanges()">GetChanges</a>*@
            </div>
				</div>

            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        $.extend($.fn.validatebox.defaults.rules, {
            date: {
                validator: function (value, param) {

                    console.log(value, param);
                   
                    return false
                },
                message: '到期日期不能小于启用日期.' 
            }
        })



         var $dg = $('#projecttypes_datagrid');
		 var editIndex = undefined;
        function endEditing() {
            if (editIndex == undefined) { return true }
            if ($dg.datagrid('validateRow', editIndex)) {

                

								$dg.datagrid('endEdit', editIndex);
                editIndex = undefined;

                
                return true;
            } else {
                return false;
            }
        }
        function onClickCell(index, field) {
            console.log(index);
            if (editIndex != index) {
                if (endEditing()) {
                    $dg.datagrid('selectRow', index)
                            .datagrid('beginEdit', index);
                    var ed = $dg.datagrid('getEditor', { index: index, field: field });
                    if (ed) {
                        ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                    }
                    editIndex = index;
                } else {
                    $dg.datagrid('selectRow', editIndex);
                }
            }
        }
        function append() {
            if (endEditing()) {
                $dg.datagrid('appendRow', { status: 'P' });
                editIndex = $dg.datagrid('getRows').length - 1;
                $dg.datagrid('selectRow', editIndex)
                        .datagrid('beginEdit', editIndex);
            }
        }
        function removeit() {
            if (editIndex == undefined) { return }
            $dg.datagrid('cancelEdit', editIndex)
                    .datagrid('deleteRow', editIndex);
            editIndex = undefined;
        }
        function accept() {
            if (endEditing()) {
                if ($dg.datagrid('getChanges').length) {
                    var inserted = $dg.datagrid('getChanges', "inserted");
                    var deleted = $dg.datagrid('getChanges', "deleted");
                    var updated = $dg.datagrid('getChanges', "updated");
                    var effectRow = new Object();
                    if (inserted.length) {
                        effectRow.inserted = inserted;
                    }
                    if (deleted.length) {
                        effectRow.deleted = deleted;
                    }
                    if (updated.length) {
                        effectRow.updated = updated;
                    }
                    console.log(JSON.stringify(effectRow));
                    $.post("/ProjectTypes/SaveData", effectRow, function (rsp) {
                        console.log(rsp);
                        if (rsp.Success) {
                            $.messager.alert("提示", "提交成功！");
                            $dg.datagrid('acceptChanges');
                            $dg.datagrid('reload');
                        }
                    }, "JSON").error(function () {
                        $.messager.alert("错误", "提交错误了！", 'error');
                        $dg.datagrid('reload');
                      
                    });
              
                }

                $dg.datagrid('acceptChanges');
            }
        }
        function reject() {
            $dg.datagrid('rejectChanges');
            editIndex = undefined;
        }
        function getChanges() {
            var rows = $dg.datagrid('getChanges');
            alert(rows.length + ' rows are changed!');
        }


		 $(function () {
		  
		     $dg.datagrid('enableFilter',[
                  {
                      field: 'StartDate',
                      type: 'datebox',
                      options: {
                          onChange: function (value) {
                              if (value == '') {
                                  $dg.datagrid('removeFilterRule', 'StartDate');
                              } else {
                                  $dg.datagrid('addFilterRule', {
                                      field: 'StartDate',
                                      op: 'equal',
                                      value: value
                                  });
                              }
                              $dg.datagrid('doFilter');
                          }
                      }
                  },
                  {
                      field: 'ExpiryDate',
                      type: 'datebox',
                      options: {
                          onChange: function (value) {
                              if (value == '') {
                                  $dg.datagrid('removeFilterRule', 'ExpiryDate');
                              } else {
                                  $dg.datagrid('addFilterRule', {
                                      field: 'ExpiryDate',
                                      op: 'equal',
                                      value: value
                                  });
                              }
                              $dg.datagrid('doFilter');
                          }
                      }
                  }
		     ]);
        })
     </script>
}

