@model IEnumerable<SAFERUN.IMS.Web.Models.WorkProcess>




@{
    ViewBag.Title = "零件工序流程卡";
}


<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">

                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                        <i class="fa fa-wrench"></i>
                    </a>
                    <ul class="dropdown-menu dropdown-user">
                        <li>
                            <a href="table_data_tables.html#">Config option 1</a>
                        </li>
                        <li>
                            <a href="table_data_tables.html#">Config option 2</a>
                        </li>
                    </ul>
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">

                <div class="table-responsive">


                    <table id="workprocesses_datagrid" class="easyui-datagrid" title="零件工序流程卡 DataGrid" style="width:auto;height:auto"
                           data-options="
                 rownumbers:true,
                 idField:'Id',
                 sortName:'Id',
                 sortorder:'asc',
                remoteFilter: true,
                singleSelect: true,
                toolbar: '#workprocesses_toolbar',
                url: '/WorkProcesses/GetData',
                method: 'get',
                onClickCell: onClickCell,
                onSelect:onSelect,
                pagination: 'true'
                   ">
                        <thead>
                            <tr>
                                <th data-options="field:'ck',checkbox:true"></th>
                                @*<th data-options="field:'Id',width:80 ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.Id)</th>*@
                                @*<th data-options="field:'WorkNo',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.WorkNo)</th>*@
                                <th data-options="field:'WorkId',width:100,sortable:true,resizable:true,
                                        formatter:function(value,row){
                                              return row.WorkWorkNo;
                                          },
                                          editor:{
                                              type:'combobox',
                                              options:{
                                                  valueField:'Id',
                                                  textField:'WorkNo',
                                                  method:'get',
                                                  url:'/WorkProcesses/GetWorks',
                                                  required:true
                                              }
                                          }">@Html.DisplayNameFor(model => model.WorkId)</th>
                                        <th data-options="field:'OrderId',width:100,sortable:true,resizable:true,
                                          formatter:function(value,row){
                                              return row.OrderOrderKey;
                                          },
                                          editor:{
                                              type:'combobox',
                                              options:{
                                                  valueField:'Id',
                                                  textField:'OrderKey',
                                                  method:'get',
                                                  url:'/WorkProcesses/GetOrders',
                                                  required:true
                                              }
                                          }">@Html.DisplayNameFor(model => model.OrderId)</th>
                                        @*<th data-options="field:'OrderKey',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.OrderKey)</th>*@
                                        <th data-options="field:'ProjectName',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.ProjectName)</th>
                                        <th data-options="field:'SKUId',width:100,sortable:true,resizable:true,
                                          formatter:function(value,row){
                                              return row.SKUSku;
                                          },
                                          editor:{
                                              type:'combobox',
                                              options:{
                                                  valueField:'Id',
                                                  textField:'Sku',
                                                  method:'get',
                                                  url:'/WorkProcesses/GetSKUs',
                                                  required:true
                                              }
                                          }">@Html.DisplayNameFor(model => model.SKUId)</th>
                                        <th data-options="field:'GraphSKU',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.GraphSKU)</th>
                                        <th data-options="field:'RequirementQty',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.RequirementQty)</th>
                                        <th data-options="field:'ProductionQty',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.ProductionQty)</th>
                                        <th data-options="field:'FinishedQty',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.FinishedQty)</th>
                                        <th data-options="field:'WorkItems',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.WorkItems)</th>
                                        <th data-options="field:'ProductionProcessId',width:100,sortable:true,resizable:true,
                                          formatter:function(value,row){
                                              return row.ProductionProcessName;
                                          },
                                          editor:{
                                              type:'combobox',
                                              options:{
                                                  valueField:'Id',
                                                  textField:'Name',
                                                  method:'get',
                                                  url:'/WorkProcesses/GetProductionProcesses',
                                                  required:true
                                              }
                                          }">@Html.DisplayNameFor(model => model.ProductionProcessId)</th>
                                        <th data-options="field:'Status',width:100,align:'right',
                                                editor:{ type:'combobox',
                                                 options:{
                                                    panelHeight: 'auto',
                                                    data: [ { value: '0', text: '启用' },{ value: '1', text: '禁用' } ],
                                                    required:true }
                                                 },
                                                 formatter: function(value,row,index){
				                                        if (value == 0) {
                                                            return '启用';
                                                        } else {
                                                            return '禁用';
                                                        }
			                                     }">@Html.DisplayNameFor(model => model.Status)</th>
                                                <th data-options="field:'Operator',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.Operator)</th>
                                                <th data-options="field:'WorkDate',width:160,align:'right',editor:{type:'datebox',options:{required:true}},sortable:true,resizable:true  ,formatter:dateformatter">@Html.DisplayNameFor(model => model.WorkDate)</th>
                                                <th data-options="field:'Remark',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.Remark)</th>




                                            </tr>
                                        </thead>


                                    </table>
                                    <div id="workprocesses_toolbar" style="height:auto">
                                        @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-plus',plain:true" onclick="append()">Append</a>*@
                                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="removeit()">Remove</a>
                                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="accept()">Accept</a>
                                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="reject()">Reject</a>


                                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-cog',plain:true" onclick="workprcesses_import()">从生产任务单导入</a>
                                        @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-search',plain:true" onclick="getChanges()">GetChanges</a>*@
                                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-paperclip',plain:true" onclick="importexcel()">EXCEL 导入</a>
                                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-cogs',plain:true" onclick="generateprocessdetails()">生成加工工序流程明细</a>
                                    </div>
                                </div>

                                <div id="detailtabs" class="easyui-tabs" style="width:auto;height:400px;">
                                    <div title="零件加工工序作业明细" style="padding:10px;">
                                        <div class="table-responsive">
                                            <table id="workprocessdetails_datagrid" class="easyui-datagrid" title="零件生产工序流程卡明细 DataGrid" style="width:auto;height:auto"
                                                   data-options="
                                                        rownumbers:true,
                                                        idField:'Id',
                                                        sortName:'Id',
                                                        sortorder:'asc',
                                                        remoteFilter: true,
                                                        singleSelect: true,
                                                       toolbar: '#workprocessdetails_toolbar',
                                                       url: '/WorkProcessDetails/GetData',
                                                       method: 'get',
                                                       onClickCell: workprocessdetails_onClickCell,
                                                       pagination: 'true'
                                                          ">
                                                <thead>
                                                    <tr>
                                                        @*<th data-options="field:'ck',checkbox:true"></th>*@
                                                        @*<th data-options="field:'Id',width:80 ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.Id)</th>*@
                                                        @*<th data-options="field:'WorkProcessId',width:100,sortable:true,resizable:true,
                                                            formatter:function(value,row){
                                                                  return row.WorkProcessWorkNo;
                                                              },
                                                              editor:{
                                                                  type:'combobox',
                                                                  options:{
                                                                      valueField:'Id',
                                                                      textField:'WorkNo',
                                                                      method:'get',
                                                                      url:'/WorkProcessDetails/GetWorkProcesses',
                                                                      required:true
                                                                }
                                                              }">@Html.DisplayNameFor(model => model.WorkProcessId)</th>*@


                                                        <th data-options="field:'ProcessStepId',width:100,sortable:true,resizable:true,
                                                            formatter:function(value,row){
                                                                return row.ProcessStepOrder;
                                                            }">工序序号</th>
                                                        <th data-options="field:'StepName',width:140 ,sortable:true,resizable:true ">工序</th>
                                                        <th data-options="field:'StationId',width:100,sortable:true,resizable:true,
                                                                              formatter:function(value,row){
                                                                                  return row.StationStationNo;
                                                                              },
                                                                              editor:{
                                                                                  type:'combobox',
                                                                                  options:{
                                                                                      valueField:'Id',
                                                                                      textField:'StationNo',
                                                                                      method:'get',
                                                                                      url:'/WorkProcessDetails/GetStations',
                                                                                      required:true
                                                                                  }
                                                                              }">加工机台</th>
                                                        <th data-options="field:'StandardElapsedTime',width:100,align:'right' ,sortable:true,resizable:true ">标准加工工时</th>


                                                        <th data-options="field:'StartingDateTime',width:160,align:'right',editor:{type:'datetimebox',options:{required:true}},sortable:true,resizable:true  ,formatter:datetimeformatter">开始时间</th>


                                                        <th data-options="field:'CompletedDateTime',width:160,align:'right',editor:{type:'datetimebox',options:{required:true}},sortable:true,resizable:true  ,formatter:datetimeformatter">结束时间</th>


                                                        <th data-options="field:'ElapsedTime',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">工时</th>


                                                        <th data-options="field:'WorkingTime',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">实际加工工时</th>


                                                        <th data-options="field:'Operator',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">操作员</th>


                                                        <th data-options="field:'QCConfirm',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">检验确认</th>


                                                        <th data-options="field:'QCConfirmDateTime',width:160,align:'right',editor:{type:'datebox',options:{required:true}},sortable:true,resizable:true  ,formatter:dateformatter">检验确认日期</th>


                                                        <th data-options="field:'CompletedConfirm',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">转序完成</th>


                                                        <th data-options="field:'Status',width:100,align:'right',
                                                editor:{ type:'combobox',
                                                 options:{
                                                    panelHeight: 'auto',
                                                    data: [ { value: '0', text: '启用' },{ value: '1', text: '禁用' } ],
                                                    required:true }
                                                 },
                                                 formatter: function(value,row,index){
				                                        if (value == 0) {
                                                            return '启用';
                                                        } else {
                                                            return '禁用';
                                                        }
			                                     }">状态</th>


                                                        <th data-options="field:'Remark',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">备注</th>


                                                    </tr>
                                                </thead>


                                            </table>
                                            <div id="workprocessdetails_toolbar" style="height:auto">
                                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-plus',plain:true" onclick="workprocessdetails_append()">Append</a>
                                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="workprocessdetails_removeit()">Remove</a>
                                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="workprocessdetails_accept()">Accept</a>
                                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="workprocessdetails_reject()">Reject</a>
                                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-search',plain:true" onclick="workprocessdetails_getChanges()">GetChanges</a>
                                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-paperclip',plain:true" onclick="workprocessdetails_importexcel()">EXCEL 导入</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="importwindow" class="easyui-window" title="Excel 导入" data-options="modal:true,collapsible:false,minimizable:false,maximizable:false,closed:true,iconCls:'icon-paperclip'" style="width:500px;height:260px;padding:10px;">

                    <p><input type="file" name="file_upload" id="file_upload" /></p>
                    <div id="alert1" class="alert alert-success">
                        <button class="close" data-dismiss="alert" type="button">&times;</button>上传成功，开始执行导入。

                    </div>
                    <div id="alert2" class="alert alert-info">
                        <button class="close" data-dismiss="alert" type="button">&times;</button>正在执行导入程序，请耐心等待。

                    </div>
                </div>
                <div id="workimportwindow" class="easyui-window" title="从生产任务单中选择导入" data-options="modal:true,closed:true,iconCls:'icon-cog'" style="width:75%;height:500px;padding:10px;">
                    <div class="table-responsive">
                        <table id="workdetails_datagrid" class="easyui-datagrid" title="生产任务单明细 DataGrid" style="width:auto;height:auto"
                               data-options="
                                rownumbers:true,
                                idField:'Id',
                                sortName:'Id',
                                sortorder:'asc',
                                remoteFilter: true,
                                singleSelect: false,
                                checkOnSelect:true,
                                url: '/WorkDetails/GetData',
                                method: 'get',
                                pagination: 'true'
                            ">
                            <thead>
                                <tr>
                                    <th data-options="field:'ck',checkbox:true"></th>
                                    @*<th data-options="field:'Id',width:80 ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.Id)</th>*@
                                    <th data-options="field:'WorkNo',width:140,editor:{type:'textbox',options:{required:true} } ,sortable:true,resizable:true ">生产任务单</th>
                                    <th data-options="field:'ParentSKUId',width:130,sortable:true,resizable:true,
                                        formatter:function(value,row){
                                            return row.ParentSKUSku;
                                        },
                                        editor:{
                                            type:'combobox',
                                            options:{
                                                valueField:'Id',
                                                textField:'Sku',
                                                method:'get',
                                                url:'/WorkDetails/GetSKUs',
                                                required:true
                                            }
                                        }">部套编码</th>

                                    @*<th data-options="field:'ParentSKUProductName',width:140,editor:{type:'textbox',options:{required:true} } ,sortable:true,resizable:true ">部套名称</th>*@
                                    <th data-options="field:'ComponentSKUId',width:130,sortable:true,resizable:true,
                                        formatter:function(value,row){
                                            return row.ComponentSKUSku;
                                        },
                                        editor:{
                                            type:'combobox',
                                            options:{
                                                valueField:'Id',
                                                textField:'Sku',
                                                method:'get',
                                                url:'/WorkDetails/GetSKUs',
                                                required:true
                                            }
                                        }">组件编码</th>
                                    @*<th data-options="field:'ComponentSKUProductName',width:140,editor:{type:'textbox',options:{required:true} } ,sortable:true,resizable:true ">组件名称</th>*@
                                    <th data-options="field:'GraphSKU',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">图纸编号</th>
                                    <th data-options="field:'GraphVer',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">图纸版本号</th>
                                    <th data-options="field:'ConsumeQty',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">BOM单位用量</th>
                                    <th data-options="field:'StockQty',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">库存量</th>
                                    <th data-options="field:'RequirementQty',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">订单需求量</th>
                                    <th data-options="field:'Brand',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">品牌</th>
                                    <th data-options="field:'Process',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">表面处理</th>
                                    <th data-options="field:'Responsibility',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">物料责任单位</th>
                                    <th data-options="field:'AltOrderProdctionDate',width:160,align:'right',editor:{type:'datebox',options:{required:true}},sortable:true,resizable:true  ,formatter:dateformatter">订单生产计划日期</th>
                                    <th data-options="field:'AltProdctionDate1',width:160,align:'right',editor:{type:'datebox',options:{required:true}},sortable:true,resizable:true  ,formatter:dateformatter">毛坯件计划生产日期</th>
                                    <th data-options="field:'ActualProdctionDate1',width:160,align:'right',editor:{type:'datebox',options:{required:true}},sortable:true,resizable:true  ,formatter:dateformatter">毛坯件确认完成日期</th>
                                    <th data-options="field:'AltProdctionDate2',width:160,align:'right',editor:{type:'datebox',options:{required:true}},sortable:true,resizable:true  ,formatter:dateformatter">精加工计划生产日期</th>
                                    <th data-options="field:'ActualProdctionDate2',width:160,align:'right',editor:{type:'datebox',options:{required:true}},sortable:true,resizable:true  ,formatter:dateformatter">精加工确认完成日期</th>
                                    <th data-options="field:'AltProdctionDate3',width:160,align:'right',editor:{type:'datebox',options:{required:true}},sortable:true,resizable:true  ,formatter:dateformatter">表面处理/入库计划日期</th>
                                    <th data-options="field:'ActualProdctionDate3',width:160,align:'right',editor:{type:'datebox',options:{required:true}},sortable:true,resizable:true  ,formatter:dateformatter">表面处理/入库确认日期</th>
                                    <th data-options="field:'AltProdctionDate4',width:160,align:'right',editor:{type:'datebox',options:{required:true}},sortable:true,resizable:true  ,formatter:dateformatter">装配计划日期</th>
                                    <th data-options="field:'ActualProdctionDate4',width:160,align:'right',editor:{type:'datebox',options:{required:true}},sortable:true,resizable:true  ,formatter:dateformatter">装配确认完成日期</th>
                                    <th data-options="field:'ConfirmUser',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">确认人</th>
                                    <th data-options="field:'Remark1',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">备注1</th>
                                    <th data-options="field:'Remark2',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">备注2</th>
                                </tr>
                            </thead>


                        </table>
                    </div>
                    <div style="text-align:center;padding:5px">
                        <a href="javascript:void(0)" class="easyui-linkbutton" onclick="execimpworkfromworkdetail()">导入选中的记录</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" onclick="$('#workdetails_datagrid').datagrid('unselectAll')">清除</a>
                    </div>
                </div>
                @section Scripts {
                    <script type="text/javascript">

                        $(function () {
                            $('#alert1').hide('normal');
                            $('#alert2').hide('normal');
                            $("#file_upload").uploadify({
                                'height': 30,
                                'fileTypeDesc': 'Excel 2010 Files',
                                'fileTypeExts': '*.xlsx',
                                'swf': '/scripts/uploadify/uploadify.swf',
                                'uploader': '/FileUpload/Upload',
                                'buttonText': '选择EXCEL',
                                'uploadLimit': 1,
                                'displayData': 'speed',
                                'formData': { 'modelType': 'WorkProcess' },
                                'width': 120,
                                'successTimeout': 100000,
                                'onUploadComplete': function (file) {
                                    $('#alert1').hide('normal');
                                    $('#alert2').show('normal');
                                },
                                'onFallback': function () {
                                    $.messager.progress('close');
                                    $.messager.alert('导入错误', '导入错误，请重试！<br>', 'error');
                                    $('#file_upload').uploadify('cancel')
                                },
                                'onUploadStart': function () {
                                    $.messager.progress({ title: '正在处理请耐心等待！' });
                                    $('#alert1').show('normal');
                                    $('#alert2').hide('normal');
                                },
                                'onUploadError': function (file, errorCode, errorMsg, errorString) {
                                    $.messager.progress('close');
                                    $.messager.alert('导入错误', '导入错误，请修改后再倒入！<br>' + errorMsg, 'error');
                                    $('#file_upload').uploadify('cancel')
                                },
                                'onUploadSuccess': function (file, data, response) {
                                    $.messager.progress('close');
                                    //console.log(file, data, response);
                                    $('#alert1').hide('normal');
                                    $('#alert2').hide('normal');
                                    $('#w').window('close');
                                    var data = $.parseJSON(data);
                                    console.log(data);
                                    if (data.success == "false") {
                                        $.messager.alert('导入错误', '导入错误，请修改后再倒入！<br>' + data.message, 'error');
                                    } else {
                                        $.messager.alert('导入完成', '导入完成！<br>', 'info');
                                        $dg.datagrid('reload');
                                    }
                                    //alert('The file ' + file.name + ' was successfully uploaded with a response of ' + response + ':' + data);

                                }
                            });

                        })

                        function importexcel() {
                            $('#importwindow').window('open');
                        }

                        var $dg = $('#workprocesses_datagrid');
                        var editIndex = undefined;
                        function endEditing() {
                            if (editIndex == undefined) { return true }
                            if ($dg.datagrid('validateRow', editIndex)) {




                                var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'OrderId' });
                                var orderorderkey = $(ed.target).combobox('getText');
                                var orderid = $(ed.target).combobox('getValue');

                                $dg.datagrid('getRows')[editIndex]['OrderOrderKey'] = orderorderkey;
                                $dg.datagrid('getRows')[editIndex]['OrderId'] = orderid;


                                var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'ProductionProcessId' });
                                var productionprocessname = $(ed.target).combobox('getText');
                                var productionprocessid = $(ed.target).combobox('getValue');

                                $dg.datagrid('getRows')[editIndex]['ProductionProcessName'] = productionprocessname;
                                $dg.datagrid('getRows')[editIndex]['ProductionProcessId'] = productionprocessid;


                                var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'SKUId' });
                                var skusku = $(ed.target).combobox('getText');
                                var skuid = $(ed.target).combobox('getValue');

                                $dg.datagrid('getRows')[editIndex]['SKUSku'] = skusku;
                                $dg.datagrid('getRows')[editIndex]['SKUId'] = skuid;


                                var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'WorkId' });
                                var workworkno = $(ed.target).combobox('getText');
                                var workid = $(ed.target).combobox('getValue');

                                $dg.datagrid('getRows')[editIndex]['WorkWorkNo'] = workworkno;
                                $dg.datagrid('getRows')[editIndex]['WorkId'] = workid;





                                $dg.datagrid('endEdit', editIndex);
                                editIndex = undefined;


                                return true;
                            } else {
                                return false;
                            }
                        }
                        function onClickCell(index, field) {
                            var _operates = ["_operate1", "_operate2", "_operate3", "ck"]
                            if ($.inArray(field, _operates) >= 0) {
                                return;
                            }
                            if (editIndex != index) {
                                if (endEditing()) {
                                    $dg.datagrid('selectRow', index)
                                            .datagrid('beginEdit', index);
                                    var ed = $dg.datagrid('getEditor', { index: index, field: field });
                                    if (ed) {
                                        ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                                    }
                                    editIndex = index;
                                } else {
                                    $dg.datagrid('selectRow', editIndex);
                                }
                            }
                        }
                        function append() {
                            if (endEditing()) {
                                $dg.datagrid('appendRow', { Status: 0 });
                                editIndex = $dg.datagrid('getRows').length - 1;
                                $dg.datagrid('selectRow', editIndex)
                                        .datagrid('beginEdit', editIndex);
                            }
                        }
                        function removeit() {
                            if (editIndex == undefined) { return }
                            $dg.datagrid('cancelEdit', editIndex)
                                    .datagrid('deleteRow', editIndex);
                            editIndex = undefined;
                        }
                        function accept() {
                            if (endEditing()) {
                                if ($dg.datagrid('getChanges').length) {
                                    var inserted = $dg.datagrid('getChanges', "inserted");
                                    var deleted = $dg.datagrid('getChanges', "deleted");
                                    var updated = $dg.datagrid('getChanges', "updated");
                                    var effectRow = new Object();
                                    if (inserted.length) {
                                        effectRow.inserted = inserted;
                                    }
                                    if (deleted.length) {
                                        effectRow.deleted = deleted;
                                    }
                                    if (updated.length) {
                                        effectRow.updated = updated;
                                    }
                                    //console.log(JSON.stringify(effectRow));
                                    $.post("/WorkProcesses/SaveData", effectRow, function (rsp) {
                                        console.log(rsp);
                                        if (rsp.Success) {
                                            $.messager.alert("提示", "提交成功！");
                                            $dg.datagrid('acceptChanges');
                                            $dg.datagrid('reload');
                                        }
                                    }, "JSON").error(function () {
                                        $.messager.alert("错误", "提交错误了！", 'error');

                                    });

                                }

                                $dg.datagrid('acceptChanges');
                            }
                        }
                        function reject() {
                            $dg.datagrid('rejectChanges');
                            editIndex = undefined;
                        }
                        function getChanges() {
                            var rows = $dg.datagrid('getChanges');
                            alert(rows.length + ' rows are changed!');
                        }


                        $(function () {

                            $dg.datagrid('enableFilter', [
                                         {
                                             field: 'Status',
                                             type: 'combobox',
                                             options: {
                                                 panelHeight: 'auto',
                                                 data: [{ value: '', text: 'All' }, { value: '0', text: '启用' }, { value: '1', text: '禁用' }],
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $dg.datagrid('removeFilterRule', 'Status');
                                                     } else {
                                                         $dg.datagrid('addFilterRule', {
                                                             field: 'Status',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $dg.datagrid('doFilter');
                                                 }
                                             }
                                         },

                                         {
                                             field: 'WorkDate',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $dg.datagrid('removeFilterRule', 'WorkDate');
                                                     } else {
                                                         $dg.datagrid('addFilterRule', {
                                                             field: 'WorkDate',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $dg.datagrid('doFilter');
                                                 }
                                             }
                                         },

                                    {
                                        field: 'WorkId',
                                        type: 'combobox',
                                        options: {
                                            valueField: 'Id',
                                            textField: 'WorkNo',
                                            method: 'get',
                                            url: '/WorkProcesses/GetWorks',
                                            onChange: function (value) {
                                                if (value == '') {
                                                    $dg.datagrid('removeFilterRule', 'WorkId');
                                                } else {
                                                    $dg.datagrid('addFilterRule', {
                                                        field: 'WorkId',
                                                        op: 'equal',
                                                        value: value
                                                    });
                                                }
                                                $dg.datagrid('doFilter');
                                            }
                                        }
                                    },
                                    {
                                        field: 'OrderId',
                                        type: 'combobox',
                                        options: {
                                            valueField: 'Id',
                                            textField: 'OrderKey',
                                            method: 'get',
                                            url: '/WorkProcesses/GetOrders',
                                            onChange: function (value) {
                                                if (value == '') {
                                                    $dg.datagrid('removeFilterRule', 'OrderId');
                                                } else {
                                                    $dg.datagrid('addFilterRule', {
                                                        field: 'OrderId',
                                                        op: 'equal',
                                                        value: value
                                                    });
                                                }
                                                $dg.datagrid('doFilter');
                                            }
                                        }
                                    },
                                    {
                                        field: 'SKUId',
                                        type: 'combobox',
                                        options: {
                                            valueField: 'Id',
                                            textField: 'Sku',
                                            method: 'get',
                                            url: '/WorkProcesses/GetSKUs',
                                            onChange: function (value) {
                                                if (value == '') {
                                                    $dg.datagrid('removeFilterRule', 'SKUId');
                                                } else {
                                                    $dg.datagrid('addFilterRule', {
                                                        field: 'SKUId',
                                                        op: 'equal',
                                                        value: value
                                                    });
                                                }
                                                $dg.datagrid('doFilter');
                                            }
                                        }
                                    },
                                    {
                                        field: 'ProductionProcessId',
                                        type: 'combobox',
                                        options: {
                                            valueField: 'Id',
                                            textField: 'Name',
                                            method: 'get',
                                            url: '/WorkProcesses/GetProductionProcesses',
                                            onChange: function (value) {
                                                if (value == '') {
                                                    $dg.datagrid('removeFilterRule', 'ProductionProcessId');
                                                } else {
                                                    $dg.datagrid('addFilterRule', {
                                                        field: 'ProductionProcessId',
                                                        op: 'equal',
                                                        value: value
                                                    });
                                                }
                                                $dg.datagrid('doFilter');
                                            }
                                        }
                                    },
                                    {
                                        field: 'WorkDetailId',
                                        type: 'combobox',
                                        options: {
                                            valueField: 'Id',
                                            textField: 'WorkNo',
                                            method: 'get',
                                            url: '/WorkProcesses/GetWorkDetails',
                                            onChange: function (value) {
                                                if (value == '') {
                                                    $dg.datagrid('removeFilterRule', 'WorkDetailId');
                                                } else {
                                                    $dg.datagrid('addFilterRule', {
                                                        field: 'WorkDetailId',
                                                        op: 'equal',
                                                        value: value
                                                    });
                                                }
                                                $dg.datagrid('doFilter');
                                            }
                                        }
                                    },
                                    {
                                        field: 'CustomerId',
                                        type: 'combobox',
                                        options: {
                                            valueField: 'Id',
                                            textField: 'AccountNumber',
                                            method: 'get',
                                            url: '/WorkProcesses/GetCustomers',
                                            onChange: function (value) {
                                                if (value == '') {
                                                    $dg.datagrid('removeFilterRule', 'CustomerId');
                                                } else {
                                                    $dg.datagrid('addFilterRule', {
                                                        field: 'CustomerId',
                                                        op: 'equal',
                                                        value: value
                                                    });
                                                }
                                                $dg.datagrid('doFilter');
                                            }
                                        }
                                    },

                            ]);
                        })

                        //------------------------------------------------------
                        //workdetails_datagrid
                        //------------------------------------------------------
                        var $workdetailsdg = $('#workdetails_datagrid');
                        $(function () {

                            $workdetailsdg.datagrid('enableFilter', [

                                         {
                                             field: 'AltOrderProdctionDate',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workdetailsdg.datagrid('removeFilterRule', 'AltOrderProdctionDate');
                                                     } else {
                                                         $workdetailsdg.datagrid('addFilterRule', {
                                                             field: 'AltOrderProdctionDate',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },
                                         {
                                             field: 'AltProdctionDate1',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workdetailsdg.datagrid('removeFilterRule', 'AltProdctionDate1');
                                                     } else {
                                                         $workdetailsdg.datagrid('addFilterRule', {
                                                             field: 'AltProdctionDate1',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },
                                         {
                                             field: 'ActualProdctionDate1',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workdetailsdg.datagrid('removeFilterRule', 'ActualProdctionDate1');
                                                     } else {
                                                         $workdetailsdg.datagrid('addFilterRule', {
                                                             field: 'ActualProdctionDate1',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },
                                         {
                                             field: 'AltProdctionDate2',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workdetailsdg.datagrid('removeFilterRule', 'AltProdctionDate2');
                                                     } else {
                                                         $workdetailsdg.datagrid('addFilterRule', {
                                                             field: 'AltProdctionDate2',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },
                                         {
                                             field: 'ActualProdctionDate2',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workdetailsdg.datagrid('removeFilterRule', 'ActualProdctionDate2');
                                                     } else {
                                                         $workdetailsdg.datagrid('addFilterRule', {
                                                             field: 'ActualProdctionDate2',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },
                                         {
                                             field: 'AltProdctionDate3',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workdetailsdg.datagrid('removeFilterRule', 'AltProdctionDate3');
                                                     } else {
                                                         $workdetailsdg.datagrid('addFilterRule', {
                                                             field: 'AltProdctionDate3',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },
                                         {
                                             field: 'ActualProdctionDate3',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workdetailsdg.datagrid('removeFilterRule', 'ActualProdctionDate3');
                                                     } else {
                                                         $workdetailsdg.datagrid('addFilterRule', {
                                                             field: 'ActualProdctionDate3',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },
                                         {
                                             field: 'AltProdctionDate4',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workdetailsdg.datagrid('removeFilterRule', 'AltProdctionDate4');
                                                     } else {
                                                         $workdetailsdg.datagrid('addFilterRule', {
                                                             field: 'AltProdctionDate4',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },
                                         {
                                             field: 'ActualProdctionDate4',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workdetailsdg.datagrid('removeFilterRule', 'ActualProdctionDate4');
                                                     } else {
                                                         $workdetailsdg.datagrid('addFilterRule', {
                                                             field: 'ActualProdctionDate4',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },
                                         {
                                             field: 'AltProdctionDate5',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workdetailsdg.datagrid('removeFilterRule', 'AltProdctionDate5');
                                                     } else {
                                                         $workdetailsdg.datagrid('addFilterRule', {
                                                             field: 'AltProdctionDate5',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },
                                         {
                                             field: 'ActualProdctionDate5',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workdetailsdg.datagrid('removeFilterRule', 'ActualProdctionDate5');
                                                     } else {
                                                         $workdetailsdg.datagrid('addFilterRule', {
                                                             field: 'ActualProdctionDate5',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },

                                    {
                                        field: 'WorkId',
                                        type: 'combobox',
                                        options: {
                                            valueField: 'Id',
                                            textField: 'WorkNo',
                                            method: 'get',
                                            url: '/WorkDetails/GetWorks',
                                            onChange: function (value) {
                                                if (value == '') {
                                                    $workdetailsdg.datagrid('removeFilterRule', 'WorkId');
                                                } else {
                                                    $workdetailsdg.datagrid('addFilterRule', {
                                                        field: 'WorkId',
                                                        op: 'equal',
                                                        value: value
                                                    });
                                                }
                                                $workdetailsdg.datagrid('doFilter');
                                            }
                                        }
                                    },
                                    {
                                        field: 'ParentSKUId',
                                        type: 'combobox',
                                        options: {
                                            valueField: 'Id',
                                            textField: 'Sku',
                                            method: 'get',
                                            url: '/WorkDetails/GetSKUs',
                                            onChange: function (value) {
                                                if (value == '') {
                                                    $workdetailsdg.datagrid('removeFilterRule', 'ParentSKUId');
                                                } else {
                                                    $workdetailsdg.datagrid('addFilterRule', {
                                                        field: 'ParentSKUId',
                                                        op: 'equal',
                                                        value: value
                                                    });
                                                }
                                                $workdetailsdg.datagrid('doFilter');
                                            }
                                        }
                                    },
                                    {
                                        field: 'ComponentSKUId',
                                        type: 'combobox',
                                        options: {
                                            valueField: 'Id',
                                            textField: 'Sku',
                                            method: 'get',
                                            url: '/WorkDetails/GetSKUs',
                                            onChange: function (value) {
                                                if (value == '') {
                                                    $workdetailsdg.datagrid('removeFilterRule', 'ComponentSKUId');
                                                } else {
                                                    $workdetailsdg.datagrid('addFilterRule', {
                                                        field: 'ComponentSKUId',
                                                        op: 'equal',
                                                        value: value
                                                    });
                                                }
                                                $workdetailsdg.datagrid('doFilter');
                                            }
                                        }
                                    },

                            ]);
                        })
                        //-----------------------------------------------------
                        //workprcesses_import()
                        //-----------------------------------------------------
                        function workprcesses_import() {
                            $('#workimportwindow').window('open');
                        }

                        //-----------------------------------------------------
                        //execimpworkfromworkdetail()
                        //------------------------------------------------------
                        function execimpworkfromworkdetail() {
                            var workdetails = $workdetailsdg.datagrid('getSelections');
                            var workdetailid = [];
                            $.each(workdetails, function (index, element) {
                                workdetailid.push(element.Id);
                            });

                            console.log(workdetailid);
                            $.post('/WorkProcesses/GenerateWorkProceesses', { workdetails: workdetailid }, function (data, textStatus, jqXHR) {
                                console.log(data);
                                $('#workimportwindow').window('close');
                                $dg.datagrid('reload');

                            });
                        }
                        //---------------------------------------------------------------
                        //generateprocessdetails（）
                        //---------------------------------------------------------------
                        function generateprocessdetails() {
                            var workprocess = $dg.datagrid('getSelected');
                            console.log(workprocess);
                            if (workprocess == null) {
                                $.messager.alert('提示', '请选择生产的记录');
                                return;
                            }
                            if (workprocess.ProductionProcessId == null || workprocess.ProductionProcessId == undefined) {
                                $.messager.alert('提示', '请先制定工序');
                                return;
                            }
                            $.post('/WorkProcesses/GenerateProcessDetails', { process: workprocess }, function (data, textStatus, jqXHR) {
                                console.log(data);
                                $('#workimportwindow').window('close');
                                $workprocessdetailsdg.datagrid('reload');

                            });

                        }
                        //--------------------------------------------
                        //workprocessdetails_datagrid
                        //-------------------------------------------
                        var $workprocessdetailsdg = $('#workprocessdetails_datagrid');
                        var workprocessdetails_editIndex = undefined;
                        function workprocessdetails_endEditing() {
                            if (workprocessdetails_editIndex == undefined) { return true }
                            if ($workprocessdetailsdg.datagrid('validateRow', workprocessdetails_editIndex)) {

                                var ed = $workprocessdetailsdg.datagrid('getEditor', { index: workprocessdetails_editIndex, field: 'ProcessStepId' });
                                var processstepstepname = $(ed.target).combobox('getText');
                                var processstepid = $(ed.target).combobox('getValue');

                                $workprocessdetailsdg.datagrid('getRows')[workprocessdetails_editIndex]['ProcessStepStepName'] = processstepstepname;
                                $workprocessdetailsdg.datagrid('getRows')[workprocessdetails_editIndex]['ProcessStepId'] = processstepid;


                                var ed = $workprocessdetailsdg.datagrid('getEditor', { index: workprocessdetails_editIndex, field: 'StationId' });
                                var stationstationno = $(ed.target).combobox('getText');
                                var stationid = $(ed.target).combobox('getValue');

                                $workprocessdetailsdg.datagrid('getRows')[workprocessdetails_editIndex]['StationStationNo'] = stationstationno;
                                $workprocessdetailsdg.datagrid('getRows')[workprocessdetails_editIndex]['StationId'] = stationid;


                                var ed = $workprocessdetailsdg.datagrid('getEditor', { index: workprocessdetails_editIndex, field: 'WorkProcessId' });
                                var workprocessworkno = $(ed.target).combobox('getText');
                                var workprocessid = $(ed.target).combobox('getValue');

                                $workprocessdetailsdg.datagrid('getRows')[workprocessdetails_editIndex]['WorkProcessWorkNo'] = workprocessworkno;
                                $workprocessdetailsdg.datagrid('getRows')[workprocessdetails_editIndex]['WorkProcessId'] = workprocessid;


                                $workprocessdetailsdg.datagrid('endEdit', workprocessdetails_editIndex);
                                workprocessdetails_editIndex = undefined;


                                return true;
                            } else {
                                return false;
                            }
                        }
                        function workprocessdetails_onClickCell(index, field) {
                            var _operates = ["_operate1", "_operate2", "_operate3", "ck"]
                            if ($.inArray(field, _operates) >= 0) {
                                return;
                            }
                            if (workprocessdetails_editIndex != index) {
                                if (workprocessdetails_endEditing()) {
                                    $workprocessdetailsdg.datagrid('selectRow', index)
                                            .datagrid('beginEdit', index);
                                    var ed = $workprocessdetailsdg.datagrid('getEditor', { index: index, field: field });
                                    if (ed) {
                                        ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                                    }
                                    workprocessdetails_editIndex = index;
                                } else {
                                    $workprocessdetailsdg.datagrid('selectRow', workprocessdetails_editIndex);
                                }
                            }
                        }
                        function workprocessdetails_append() {
                            if (workprocessdetails_endEditing()) {
                                $workprocessdetailsdg.datagrid('appendRow', { Status: 0 });
                                workprocessdetails_editIndex = $workprocessdetailsdg.datagrid('getRows').length - 1;
                                $workprocessdetailsdg.datagrid('selectRow', workprocessdetails_editIndex)
                                        .datagrid('beginEdit', workprocessdetails_editIndex);
                            }
                        }
                        function workprocessdetails_removeit() {
                            if (workprocessdetails_editIndex == undefined) { return }
                            $workprocessdetailsdg.datagrid('cancelEdit', workprocessdetails_editIndex)
                                    .datagrid('deleteRow', workprocessdetails_editIndex);
                            workprocessdetails_editIndex = undefined;
                        }
                        function workprocessdetails_accept() {
                            if (workprocessdetails_endEditing()) {
                                if ($workprocessdetailsdg.datagrid('getChanges').length) {
                                    var inserted = $workprocessdetailsdg.datagrid('getChanges', "inserted");
                                    var deleted = $workprocessdetailsdg.datagrid('getChanges', "deleted");
                                    var updated = $workprocessdetailsdg.datagrid('getChanges', "updated");
                                    var effectRow = new Object();
                                    if (inserted.length) {
                                        effectRow.inserted = inserted;
                                    }
                                    if (deleted.length) {
                                        effectRow.deleted = deleted;
                                    }
                                    if (updated.length) {
                                        effectRow.updated = updated;
                                    }
                                    //console.log(JSON.stringify(effectRow));
                                    $.post("/WorkProcessDetails/SaveData", effectRow, function (rsp) {
                                        console.log(rsp);
                                        if (rsp.Success) {
                                            $.messager.alert("提示", "提交成功！");
                                            $workprocessdetailsdg.datagrid('acceptChanges');
                                            $workprocessdetailsdg.datagrid('reload');
                                        }
                                    }, "JSON").error(function () {
                                        $.messager.alert("错误", "提交错误了！", 'error');

                                    });

                                }

                                $workprocessdetailsdg.datagrid('acceptChanges');
                            }
                        }
                        function workprocessdetails_reject() {
                            $workprocessdetailsdg.datagrid('rejectChanges');
                            workprocessdetails_editIndex = undefined;
                        }
                        function workprocessdetails_getChanges() {
                            var rows = $workprocessdetailsdg.datagrid('getChanges');
                            alert(rows.length + ' rows are changed!');
                        }


                        $(function () {

                            $workprocessdetailsdg.datagrid('enableFilter', [
                                         {
                                             field: 'Status',
                                             type: 'combobox',
                                             options: {
                                                 panelHeight: 'auto',
                                                 data: [{ value: '', text: 'All' }, { value: '0', text: '启用' }, { value: '1', text: '禁用' }],
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workprocessdetailsdg.datagrid('removeFilterRule', 'Status');
                                                     } else {
                                                         $workprocessdetailsdg.datagrid('addFilterRule', {
                                                             field: 'Status',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workprocessdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },

                                         {
                                             field: 'StartingDateTime',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workprocessdetailsdg.datagrid('removeFilterRule', 'StartingDateTime');
                                                     } else {
                                                         $workprocessdetailsdg.datagrid('addFilterRule', {
                                                             field: 'StartingDateTime',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workprocessdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },
                                         {
                                             field: 'CompletedDateTime',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workprocessdetailsdg.datagrid('removeFilterRule', 'CompletedDateTime');
                                                     } else {
                                                         $workprocessdetailsdg.datagrid('addFilterRule', {
                                                             field: 'CompletedDateTime',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workprocessdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },
                                         {
                                             field: 'QCConfirmDateTime',
                                             type: 'datebox',
                                             options: {
                                                 onChange: function (value) {
                                                     if (value == '') {
                                                         $workprocessdetailsdg.datagrid('removeFilterRule', 'QCConfirmDateTime');
                                                     } else {
                                                         $workprocessdetailsdg.datagrid('addFilterRule', {
                                                             field: 'QCConfirmDateTime',
                                                             op: 'equal',
                                                             value: value
                                                         });
                                                     }
                                                     $workprocessdetailsdg.datagrid('doFilter');
                                                 }
                                             }
                                         },

                                    {
                                        field: 'WorkProcessId',
                                        type: 'combobox',
                                        options: {
                                            valueField: 'Id',
                                            textField: 'WorkNo',
                                            method: 'get',
                                            url: '/WorkProcessDetails/GetWorkProcesses',
                                            onChange: function (value) {
                                                if (value == '') {
                                                    $workprocessdetailsdg.datagrid('removeFilterRule', 'WorkProcessId');
                                                } else {
                                                    $workprocessdetailsdg.datagrid('addFilterRule', {
                                                        field: 'WorkProcessId',
                                                        op: 'equal',
                                                        value: value
                                                    });
                                                }
                                                $workprocessdetailsdg.datagrid('doFilter');
                                            }
                                        }
                                    },
                                    {
                                        field: 'ProcessStepId',
                                        type: 'combobox',
                                        options: {
                                            valueField: 'Id',
                                            textField: 'StepName',
                                            method: 'get',
                                            url: '/WorkProcessDetails/GetProcessSteps',
                                            onChange: function (value) {
                                                if (value == '') {
                                                    $workprocessdetailsdg.datagrid('removeFilterRule', 'ProcessStepId');
                                                } else {
                                                    $workprocessdetailsdg.datagrid('addFilterRule', {
                                                        field: 'ProcessStepId',
                                                        op: 'equal',
                                                        value: value
                                                    });
                                                }
                                                $workprocessdetailsdg.datagrid('doFilter');
                                            }
                                        }
                                    },
                                    {
                                        field: 'StationId',
                                        type: 'combobox',
                                        options: {
                                            valueField: 'Id',
                                            textField: 'StationNo',
                                            method: 'get',
                                            url: '/WorkProcessDetails/GetStations',
                                            onChange: function (value) {
                                                if (value == '') {
                                                    $workprocessdetailsdg.datagrid('removeFilterRule', 'StationId');
                                                } else {
                                                    $workprocessdetailsdg.datagrid('addFilterRule', {
                                                        field: 'StationId',
                                                        op: 'equal',
                                                        value: value
                                                    });
                                                }
                                                $workprocessdetailsdg.datagrid('doFilter');
                                            }
                                        }
                                    },

                            ]);

                            filterByWorkProcessId(-1);
                        })
                        //----------------------------------------------
                        //onSelect
                        //----------------------------------------------
                        function onSelect(index, row) {
                            filterByWorkProcessId(row.Id);

                        }
                        function filterByWorkProcessId(id) {
                            var value = id;
                            $workprocessdetailsdg.datagrid('addFilterRule', {
                                field: 'WorkProcessId',
                                op: 'equal',
                                value: value
                            });
                            $workprocessdetailsdg.datagrid('doFilter');
                        }


                    </script>
                }

