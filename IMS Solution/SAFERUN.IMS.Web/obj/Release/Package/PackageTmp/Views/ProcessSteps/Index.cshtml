


@model IEnumerable<SAFERUN.IMS.Web.Models.ProcessStep>




@{
    ViewBag.Title = "工序维护";
}


<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>工序维护 Data</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                        <i class="fa fa-wrench"></i>
                    </a>
                    <ul class="dropdown-menu dropdown-user">
                        <li>
                            <a href="table_data_tables.html#">Config option 1</a>
                        </li>
                        <li>
                            <a href="table_data_tables.html#">Config option 2</a>
                        </li>
                    </ul>
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">

                <div class="table-responsive">
           
 
       <table id="processsteps_datagrid" class="easyui-datagrid" title="工序维护 DataGrid" style="width:auto;height:auto"
                   data-options="
                 rownumbers:true,
                 idField:'Id',
                 sortName:'Id',
                 sortorder:'asc',
                remoteFilter: true,
                singleSelect: true,
                toolbar: '#processsteps_toolbar',
                url: '/ProcessSteps/GetData',
                method: 'get',
                onClickCell: onClickCell,
                pagination: 'true'
                   ">
                <thead>
                    <tr>
                        @*<th data-options="field:'ck',checkbox:true"></th>*@
        			@*<th data-options="field:'Id',width:80 ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.Id)</th>*@
                        <th data-options="field:'ProductionProcessId',width:100,sortable:true,resizable:true,
                        formatter:function(value,row){
                            return row.ProductionProcessName;
                        },
                        editor:{
                            type:'combobox',
                            options:{
                                valueField:'Id',
                                textField:'Name',
                                method:'get',
                                url:'/ProcessSteps/GetProductionProcesses',
                                required:false
                            }
                        }">@Html.DisplayNameFor(model => model.ProductionProcessId)</th>
				     <th data-options="field:'StepName',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.StepName)</th>
		
                
				     <th data-options="field:'Order',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.Order)</th>
		
                			<th data-options="field:'StationId',width:100,sortable:true,resizable:true, 
                        formatter:function(value,row){
                            return row.StationStationNo;
                        },
                        editor:{
                            type:'combobox',
                            options:{
                                valueField:'Id',
                                textField:'StationNo',
                                method:'get',
                                url:'/ProcessSteps/GetStations',
                                required:false
                            }
                        }">@Html.DisplayNameFor(model => model.StationId)</th>

           
                
				     <th data-options="field:'ElapsedTime',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.ElapsedTime)</th>
		
                
				     @*<th data-options="field:'Equipment',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.Equipment)</th>*@
		
                
				     <th data-options="field:'Status',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.Status)</th>
		
                
				     <th data-options="field:'Description',width:140,editor:{type:'textbox',options:{required:false} } ,sortable:true,resizable:true ">@Html.DisplayNameFor(model => model.Description)</th>
		
                			

           
               
    </tr>
    </thead>
 

</table>
	<div id="processsteps_toolbar" style="height:auto">
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-add',plain:true" onclick="append()">Append</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="removeit()">Remove</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="accept()">Accept</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="reject()">Reject</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-search',plain:true" onclick="getChanges()">GetChanges</a>
				<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-paperclip',plain:true" onclick="importexcel()">EXCEL 导入</a>
            </div>
				</div>

            </div>
        </div>
    </div>
</div>
<div id="importwindow" class="easyui-window" title="Excel 导入"   data-options="modal:true,collapsible:false,minimizable:false,maximizable:false,closed:true,iconCls:'icon-paperclip'" style="width:500px;height:260px;padding:10px;">
     
    <p><input type="file" name="file_upload" id="file_upload" /></p>
    <div id="alert1" class="alert alert-success">
        <button class="close" data-dismiss="alert" type="button">&times;</button>上传成功，开始执行导入。
        
    </div>
    <div id="alert2" class="alert alert-info">
        <button class="close" data-dismiss="alert" type="button">&times;</button>正在执行导入程序，请耐心等待。
         
    </div>
</div>

@section Scripts {
    <script type="text/javascript">

			 $(function () {
                        $('#alert1').hide('normal');
                        $('#alert2').hide('normal');
                        $("#file_upload").uploadify({
                            'height': 30,
                            'fileTypeDesc': 'Excel 2010 Files',
                            'fileTypeExts': '*.xlsx',
                            'swf': '/scripts/uploadify/uploadify.swf',
                            'uploader': '/FileUpload/Upload',
                            'buttonText': '选择EXCEL',
							'uploadLimit' : 1,
                            'displayData': 'speed',
							'formData': { 'modelType': 'ProcessStep' },
                            'width': 120,
                            'successTimeout': 100000,
                            'onUploadComplete': function (file) {
                                $('#alert1').hide('normal');
                                $('#alert2').show('normal');
                            },
                            'onFallback' : function() {
                                $.messager.progress('close');
                                $.messager.alert('导入错误', '导入错误，请重试！<br>', 'error');
                                $('#file_upload').uploadify('cancel')
                            },
                            'onUploadStart': function () {
                                $.messager.progress({ title: '正在处理请耐心等待！' });
                                $('#alert1').show('normal');
                                $('#alert2').hide('normal');
                            },
                            'onUploadError': function (file, errorCode, errorMsg, errorString) {
                                $.messager.progress('close');
                                $.messager.alert('导入错误', '导入错误，请修改后再倒入！<br>' + errorMsg, 'error');
                                $('#file_upload').uploadify('cancel')
                            },
                            'onUploadSuccess': function (file, data, response) {
                                $.messager.progress('close');
                                //console.log(file, data, response);
                                $('#alert1').hide('normal');
                                $('#alert2').hide('normal');
                                $('#w').window('close');
                                var data = $.parseJSON(data);
                                console.log(data);
                                if (data.success == "false") {
                                    $.messager.alert('导入错误', '导入错误，请修改后再倒入！<br>' + data.message, 'error');
                                } else {
                                    $.messager.alert('导入完成', '导入完成！<br>', 'info');
									$dg.datagrid('reload');
                                }
                                //alert('The file ' + file.name + ' was successfully uploaded with a response of ' + response + ':' + data);
                                
                            }
                        });

                    })

                    function importexcel() {
                        $('#importwindow').window('open');
                    }

         var $dg = $('#processsteps_datagrid');
		 var editIndex = undefined;
        function endEditing() {
            if (editIndex == undefined) { return true }
            if ($dg.datagrid('validateRow', editIndex)) {

				                var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'ProductionProcessId' });
                var productionprocessname = $(ed.target).combobox('getText');
                var productionprocessid = $(ed.target).combobox('getValue');
               
                $dg.datagrid('getRows')[editIndex]['ProductionProcessName'] =  productionprocessname;
                $dg.datagrid('getRows')[editIndex]['ProductionProcessId'] = productionprocessid;
 

				                var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'StationId' });
                var stationstationno = $(ed.target).combobox('getText');
                var stationid = $(ed.target).combobox('getValue');
               
                $dg.datagrid('getRows')[editIndex]['StationStationNo'] =  stationstationno;
                $dg.datagrid('getRows')[editIndex]['StationId'] = stationid;
 

								$dg.datagrid('endEdit', editIndex);
                editIndex = undefined;

                
                return true;
            } else {
                return false;
            }
        }
        function onClickCell(index, field) {
            if (editIndex != index) {
                if (endEditing()) {
                    $dg.datagrid('selectRow', index)
                            .datagrid('beginEdit', index);
                    var ed = $dg.datagrid('getEditor', { index: index, field: field });
                    if (ed) {
                        ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                    }
                    editIndex = index;
                } else {
                    $dg.datagrid('selectRow', editIndex);
                }
            }
        }
        function append() {
            if (endEditing()) {
                $dg.datagrid('appendRow', { status: 'P' });
                editIndex = $dg.datagrid('getRows').length - 1;
                $dg.datagrid('selectRow', editIndex)
                        .datagrid('beginEdit', editIndex);
            }
        }
        function removeit() {
            if (editIndex == undefined) { return }
            $dg.datagrid('cancelEdit', editIndex)
                    .datagrid('deleteRow', editIndex);
            editIndex = undefined;
        }
        function accept() {
            if (endEditing()) {
                if ($dg.datagrid('getChanges').length) {
                    var inserted = $dg.datagrid('getChanges', "inserted");
                    var deleted = $dg.datagrid('getChanges', "deleted");
                    var updated = $dg.datagrid('getChanges', "updated");
                    var effectRow = new Object();
                    if (inserted.length) {
                        effectRow.inserted = inserted;
                    }
                    if (deleted.length) {
                        effectRow.deleted = deleted;
                    }
                    if (updated.length) {
                        effectRow.updated = updated;
                    }
                    //console.log(JSON.stringify(effectRow));
                    $.post("/ProcessSteps/SaveData", effectRow, function (rsp) {
                        console.log(rsp);
                        if (rsp.Success) {
                            $.messager.alert("提示", "提交成功！");
                            $dg.datagrid('acceptChanges');
							$dg.datagrid('reload');
                        }
                    }, "JSON").error(function () {
                        $.messager.alert("错误", "提交错误了！",'error');
                      
                    });
              
                }

                $dg.datagrid('acceptChanges');
            }
        }
        function reject() {
            $dg.datagrid('rejectChanges');
            editIndex = undefined;
        }
        function getChanges() {
            var rows = $dg.datagrid('getChanges');
            alert(rows.length + ' rows are changed!');
        }


		 $(function () {
		  
           $dg.datagrid('enableFilter',[
		   		   
		   		   {
				 field: 'StationId',
				 type:'combobox',
                 options:{
                                valueField:'Id',
                                textField:'StationNo',
                                method:'get',
                                url:'/ProcessSteps/GetStations',
								onChange: function (value) {
								if (value == '') {
									$dg.datagrid('removeFilterRule', 'StationId');
								} else {
									$dg.datagrid('addFilterRule', {
										field: 'StationId',
									    op: 'equal',
										value: value
                                });
                            }
                            $dg.datagrid('doFilter');
                        }
					}
		   },
		   		   {
				 field: 'ProductionProcessId',
				 type:'combobox',
                 options:{
                                valueField:'Id',
                                textField:'Name',
                                method:'get',
                                url:'/ProcessSteps/GetProductionProcesses',
								onChange: function (value) {
								if (value == '') {
									$dg.datagrid('removeFilterRule', 'ProductionProcessId');
								} else {
									$dg.datagrid('addFilterRule', {
										field: 'ProductionProcessId',
									    op: 'equal',
										value: value
                                });
                            }
                            $dg.datagrid('doFilter');
                        }
					}
		   },
		   		   
		   ]);
        })
     </script>
}

